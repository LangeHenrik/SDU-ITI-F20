<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="78006eb8-68ab-4338-826e-dbd801e859f0" activeEnvironment="Default" name="REST Project 1" resourceRoot="" soapui-version="5.5.0" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:restMockService id="22f7ecbb-6b2c-4dba-96d1-6b697f4b461f" port="8080" path="/" host="DESKTOP-MKJIVN1" name="People"><con:settings/><con:properties/><con:restMockAction name="/people" method="GET" resourcePath="/people" id="751542bc-9822-4d63-a48c-21421fc0d6bb"><con:settings/><con:defaultResponse>people</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="people" id="82ed3d0a-3b48-4bcf-880d-cf8f6dacf07c" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>[
{
"name": "Jack",
"age": 32,
"possessions": [
"Mercedes",
"Toyota"
]
},
{
"name": "Jill",
"age": 29,
"possessions": []
}
]</con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>